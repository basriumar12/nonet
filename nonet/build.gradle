apply plugin: 'com.android.library'
apply plugin: 'com.github.dcendents.android-maven'
apply plugin: 'com.jfrog.bintray'
apply plugin: 'nebula.provided-base'
apply plugin: 'com.getkeepsafe.dexcount'

// Manifest version information major.minor.patch.hotfix
def versionMajor = 2  // Must be in [0, 99]
def versionMinor = 0  // Must be in [0, 99]
def versionPatch = 3  // Must be in [0, 99]
def versionHotfix = 0 // Must be in [0, 9]

project.group = "com.keiferstone"
project.version = "${versionMajor}.${versionMinor}.${versionPatch}"

android {
    compileSdkVersion 25
    buildToolsVersion "25.0.2"

    defaultConfig {
        minSdkVersion 16
        targetSdkVersion 25
        versionCode versionMajor * 100000 + versionMinor * 1000 + versionPatch * 10 + versionHotfix
        versionName project.version

        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
    }

    signingConfigs {
        releaseConfig {
            storeFile file(project.ext.keystorePath)
            storePassword project.ext.keystorePassword
            keyAlias project.ext.keyAlias
            keyPassword project.ext.keyPassword
        }
    }

    buildTypes {
        release {
            signingConfig signingConfigs.releaseConfig
            minifyEnabled false
            shrinkResources false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }
}

dependencies {
    compile fileTree(include: ['*.jar'], dir: 'libs')

    // Instrumentation tests
    androidTestCompile('com.android.support.test.espresso:espresso-core:2.2.2', {
        exclude group: 'com.android.support', module: 'support-annotations'
    })

    // Unit tests
    testCompile 'junit:junit:4.12'
    testCompile "org.robolectric:robolectric:3.2.2"

    // Android support libraries
    compile 'com.android.support:appcompat-v7:25.3.1'
    compile 'com.android.support:design:25.3.1'

    // Third-party libraries
    compile 'com.squareup.okhttp3:okhttp:3.7.0'
    provided 'io.reactivex.rxjava2:rxjava:2.0.8'
}

def siteUrl = 'https://github.com/keiferstone/nonet'
def gitUrl = 'https://github.com/keiferstone/nonet.git'

install {
    repositories.mavenInstaller {
        pom {
            project {
                packaging 'aar'

                name project.group + ":nonet"
                description = 'An Android library for monitoring network connectivity'
                url siteUrl

                groupId = project.group
                artifactId = "nonet"
                version = project.version

                licenses {
                    license {
                        name 'The Apache Software License, Version 2.0'
                        url 'http://www.apache.org/licenses/LICENSE-2.0.txt'
                    }
                }
                developers {
                    developer {
                        id 'keiferstone'
                        name 'Keifer Stone'
                        email 'keiferstone@gmail.com'
                    }
                }
                scm {
                    connection gitUrl
                    developerConnection gitUrl
                    url siteUrl
                }
            }
        }
    }
}

task sourcesJar(type: Jar) {
    from android.sourceSets.main.java.srcDirs
    classifier = 'sources'
}

task javadoc(type: Javadoc) {
    source = android.sourceSets.main.java.srcDirs
    classpath += project.files(android.getBootClasspath().join(File.pathSeparator))
}

task javadocJar(type: Jar, dependsOn: javadoc) {
    classifier = 'javadoc'
    from javadoc.destinationDir
}

afterEvaluate {
    javadoc.classpath += files(android.libraryVariants.collect { variant ->
        variant.javaCompile.classpath.files
    })
}

artifacts {
    archives javadocJar
    archives sourcesJar
}

bintray {
    user = System.getenv("BINTRAY_USER")
    key = System.getenv("BINTRAY_APIKEY")

    configurations = ['archives']
    pkg {
        repo = "maven"
        name = project.group + ":nonet"
        websiteUrl = siteUrl
        vcsUrl = gitUrl
        licenses = ["Apache-2.0"]
        publish = true
        version {
            gpg {
                sign = true
                passphrase = System.getenv("BINTRAY_PASSWORD")
            }
            name = project.version
            desc = 'NoNet Android Library ' + project.version
            released  = new Date()
            vcsTag = project.version

            mavenCentralSync {
                user = System.getenv("BINTRAY_USER")
                password = System.getenv("BINTRAY_PASSWORD")
            }
        }
    }
}